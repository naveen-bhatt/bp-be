{
  "version": "48.0.0",
  "artifacts": {
    "dev-vpc-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "dev-vpc-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "dev-vpc-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://070949690701/ap-south-1",
      "properties": {
        "templateFile": "dev-vpc-stack.template.json",
        "terminationProtection": false,
        "tags": {
          "CostCenter": "development",
          "Environment": "dev",
          "ManagedBy": "cdk",
          "Project": "bluepansy"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-deploy-role-070949690701-ap-south-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-cfn-exec-role-070949690701-ap-south-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-070949690701-ap-south-1/4d0525a8c379eab1719ed3455f01613d1d4f36fb00a226b20373f628075492ea.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "dev-vpc-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-lookup-role-070949690701-ap-south-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "dev-vpc-stack.assets"
      ],
      "metadata": {
        "/dev-vpc-stack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "CostCenter",
                "Value": "development"
              },
              {
                "Key": "Environment",
                "Value": "dev"
              },
              {
                "Key": "ManagedBy",
                "Value": "cdk"
              },
              {
                "Key": "Project",
                "Value": "bluepansy"
              }
            ]
          }
        ],
        "/dev-vpc-stack/dev-vpc/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpc91497180"
          }
        ],
        "/dev-vpc-stack/dev-vpc/publicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcpublicSubnet1Subnet7C94356B"
          }
        ],
        "/dev-vpc-stack/dev-vpc/publicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcpublicSubnet1RouteTable304F936F"
          }
        ],
        "/dev-vpc-stack/dev-vpc/publicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcpublicSubnet1RouteTableAssociation8C92EB8D"
          }
        ],
        "/dev-vpc-stack/dev-vpc/publicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcpublicSubnet1DefaultRoute05B3B9A7"
          }
        ],
        "/dev-vpc-stack/dev-vpc/publicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcpublicSubnet1EIP19E59F11"
          }
        ],
        "/dev-vpc-stack/dev-vpc/publicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcpublicSubnet1NATGatewayCEC19A0B"
          }
        ],
        "/dev-vpc-stack/dev-vpc/publicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcpublicSubnet2SubnetF1219D44"
          }
        ],
        "/dev-vpc-stack/dev-vpc/publicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcpublicSubnet2RouteTableE45223FF"
          }
        ],
        "/dev-vpc-stack/dev-vpc/publicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcpublicSubnet2RouteTableAssociationB200A7DE"
          }
        ],
        "/dev-vpc-stack/dev-vpc/publicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcpublicSubnet2DefaultRouteCD54DC7C"
          }
        ],
        "/dev-vpc-stack/dev-vpc/privateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcprivateSubnet1Subnet3F15C46D"
          }
        ],
        "/dev-vpc-stack/dev-vpc/privateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcprivateSubnet1RouteTable5946D7AE"
          }
        ],
        "/dev-vpc-stack/dev-vpc/privateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcprivateSubnet1RouteTableAssociation6578FE59"
          }
        ],
        "/dev-vpc-stack/dev-vpc/privateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcprivateSubnet1DefaultRouteB40FD005"
          }
        ],
        "/dev-vpc-stack/dev-vpc/privateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcprivateSubnet2SubnetB94607F3"
          }
        ],
        "/dev-vpc-stack/dev-vpc/privateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcprivateSubnet2RouteTable48BB609C"
          }
        ],
        "/dev-vpc-stack/dev-vpc/privateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcprivateSubnet2RouteTableAssociationB9109482"
          }
        ],
        "/dev-vpc-stack/dev-vpc/privateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcprivateSubnet2DefaultRouteDC17BA5D"
          }
        ],
        "/dev-vpc-stack/dev-vpc/isolatedSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcisolatedSubnet1SubnetF4527CD2"
          }
        ],
        "/dev-vpc-stack/dev-vpc/isolatedSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcisolatedSubnet1RouteTableA71E9744"
          }
        ],
        "/dev-vpc-stack/dev-vpc/isolatedSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcisolatedSubnet1RouteTableAssociation9E5BF766"
          }
        ],
        "/dev-vpc-stack/dev-vpc/isolatedSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcisolatedSubnet2Subnet395BFEA0"
          }
        ],
        "/dev-vpc-stack/dev-vpc/isolatedSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcisolatedSubnet2RouteTable9853A56E"
          }
        ],
        "/dev-vpc-stack/dev-vpc/isolatedSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcisolatedSubnet2RouteTableAssociation5613220C"
          }
        ],
        "/dev-vpc-stack/dev-vpc/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcIGW7D664B58"
          }
        ],
        "/dev-vpc-stack/dev-vpc/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcVPCGW7C912A36"
          }
        ],
        "/dev-vpc-stack/dev-ecs-sg/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devecssg4E8E432A"
          }
        ],
        "/dev-vpc-stack/dev-ecs-sg/from devvpcstackdevalbsg2AB7BDFD:8000": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devecssgfromdevvpcstackdevalbsg2AB7BDFD8000C51F0C6C"
          }
        ],
        "/dev-vpc-stack/dev-rds-sg/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devrdssg7692B32F"
          }
        ],
        "/dev-vpc-stack/dev-rds-sg/from devvpcstackdevecssg0DFA54CD:3306": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devrdssgfromdevvpcstackdevecssg0DFA54CD3306D1538923"
          }
        ],
        "/dev-vpc-stack/dev-lambda-sg/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devlambdasgC7C79100"
          }
        ],
        "/dev-vpc-stack/dev-lambda-sg/from devvpcstackdevecssg0DFA54CD:8000": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devlambdasgfromdevvpcstackdevecssg0DFA54CD80004AFEE765"
          }
        ],
        "/dev-vpc-stack/dev-alb-sg/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devalbsg7E4D78DE"
          }
        ],
        "/dev-vpc-stack/dev-vpc-id": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devvpcid"
          }
        ],
        "/dev-vpc-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/dev-vpc-stack/Exports/Output{\"Ref\":\"devvpcisolatedSubnet1SubnetF4527CD2\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefdevvpcisolatedSubnet1SubnetF4527CD21CF005E7"
          }
        ],
        "/dev-vpc-stack/Exports/Output{\"Ref\":\"devvpcisolatedSubnet2Subnet395BFEA0\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefdevvpcisolatedSubnet2Subnet395BFEA06F74CDE9"
          }
        ],
        "/dev-vpc-stack/Exports/Output{\"Fn::GetAtt\":[\"devrdssg7692B32F\",\"GroupId\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttdevrdssg7692B32FGroupId95E62AAF"
          }
        ],
        "/dev-vpc-stack/Exports/Output{\"Fn::GetAtt\":[\"devalbsg7E4D78DE\",\"GroupId\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttdevalbsg7E4D78DEGroupId731E6BBA"
          }
        ],
        "/dev-vpc-stack/Exports/Output{\"Ref\":\"devvpcpublicSubnet1Subnet7C94356B\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefdevvpcpublicSubnet1Subnet7C94356B10F6FEEA"
          }
        ],
        "/dev-vpc-stack/Exports/Output{\"Ref\":\"devvpcpublicSubnet2SubnetF1219D44\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefdevvpcpublicSubnet2SubnetF1219D44A3D1E741"
          }
        ],
        "/dev-vpc-stack/Exports/Output{\"Ref\":\"devvpc91497180\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefdevvpc914971804F00FA14"
          }
        ],
        "/dev-vpc-stack/Exports/Output{\"Ref\":\"devvpcprivateSubnet1Subnet3F15C46D\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefdevvpcprivateSubnet1Subnet3F15C46D0BE605D6"
          }
        ],
        "/dev-vpc-stack/Exports/Output{\"Ref\":\"devvpcprivateSubnet2SubnetB94607F3\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefdevvpcprivateSubnet2SubnetB94607F3D39D5CB1"
          }
        ],
        "/dev-vpc-stack/Exports/Output{\"Fn::GetAtt\":[\"devecssg4E8E432A\",\"GroupId\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttdevecssg4E8E432AGroupId4D5F10D4"
          }
        ],
        "/dev-vpc-stack/Exports/Output{\"Fn::GetAtt\":[\"devlambdasgC7C79100\",\"GroupId\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttdevlambdasgC7C79100GroupId5856BE56"
          }
        ],
        "/dev-vpc-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/dev-vpc-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "dev-vpc-stack"
    },
    "dev-rds-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "dev-rds-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "dev-rds-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://070949690701/ap-south-1",
      "properties": {
        "templateFile": "dev-rds-stack.template.json",
        "terminationProtection": false,
        "tags": {
          "CostCenter": "development",
          "Environment": "dev",
          "ManagedBy": "cdk",
          "Project": "bluepansy"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-deploy-role-070949690701-ap-south-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-cfn-exec-role-070949690701-ap-south-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-070949690701-ap-south-1/828700948b8c889eaeaf17ffede154d9057cb012cd7d22df89274a9ef676d917.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "dev-rds-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-lookup-role-070949690701-ap-south-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "dev-vpc-stack",
        "dev-rds-stack.assets"
      ],
      "metadata": {
        "/dev-rds-stack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "CostCenter",
                "Value": "development"
              },
              {
                "Key": "Environment",
                "Value": "dev"
              },
              {
                "Key": "ManagedBy",
                "Value": "cdk"
              },
              {
                "Key": "Project",
                "Value": "bluepansy"
              }
            ]
          }
        ],
        "/dev-rds-stack/dev-db-params/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devdbparams4AA0E30A"
          }
        ],
        "/dev-rds-stack/dev-database/SubnetGroup/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devdatabaseSubnetGroup419F4E04"
          }
        ],
        "/dev-rds-stack/dev-database/MonitoringRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devdatabaseMonitoringRole1132C345"
          }
        ],
        "/dev-rds-stack/dev-database/Secret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devrdsstackdevdatabaseSecret5983617A3fdaad7efa858a3daf9490cf0a702aeb"
          }
        ],
        "/dev-rds-stack/dev-database/Secret/Attachment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devdatabaseSecretAttachmentFA3A5AD7"
          }
        ],
        "/dev-rds-stack/dev-database/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devdatabaseD0B326BA"
          }
        ],
        "/dev-rds-stack/dev-db-endpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devdbendpoint"
          }
        ],
        "/dev-rds-stack/dev-db-port": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devdbport"
          }
        ],
        "/dev-rds-stack/dev-db-name": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devdbname"
          }
        ],
        "/dev-rds-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/dev-rds-stack/Exports/Output{\"Ref\":\"devdatabaseSecretAttachmentFA3A5AD7\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefdevdatabaseSecretAttachmentFA3A5AD7128FC06B"
          }
        ],
        "/dev-rds-stack/Exports/Output{\"Ref\":\"devdatabaseD0B326BA\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefdevdatabaseD0B326BAE0A64FEC"
          }
        ],
        "/dev-rds-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/dev-rds-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "dev-rds-stack"
    },
    "dev-ecs-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "dev-ecs-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "dev-ecs-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://070949690701/ap-south-1",
      "properties": {
        "templateFile": "dev-ecs-stack.template.json",
        "terminationProtection": false,
        "tags": {
          "CostCenter": "development",
          "Environment": "dev",
          "ManagedBy": "cdk",
          "Project": "bluepansy"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-deploy-role-070949690701-ap-south-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-cfn-exec-role-070949690701-ap-south-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-070949690701-ap-south-1/128c0b4948cfc3570452f5ba83f67cbbbd858e1d2f1c8776d77dba1514fe742f.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "dev-ecs-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-lookup-role-070949690701-ap-south-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "dev-vpc-stack",
        "dev-rds-stack",
        "dev-ecs-stack.assets"
      ],
      "metadata": {
        "/dev-ecs-stack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "CostCenter",
                "Value": "development"
              },
              {
                "Key": "Environment",
                "Value": "dev"
              },
              {
                "Key": "ManagedBy",
                "Value": "cdk"
              },
              {
                "Key": "Project",
                "Value": "bluepansy"
              }
            ]
          }
        ],
        "/dev-ecs-stack/dev-ecr-repo/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devecrrepo8C90D3FD"
          }
        ],
        "/dev-ecs-stack/dev-ecs-cluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devecsclusterB98E42DE"
          }
        ],
        "/dev-ecs-stack/dev-ecs-execution-role/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devecsexecutionrole40947325"
          }
        ],
        "/dev-ecs-stack/dev-ecs-execution-role/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devecsexecutionroleDefaultPolicy0749328B"
          }
        ],
        "/dev-ecs-stack/dev-ecs-task-role/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devecstaskroleACD32AC8"
          }
        ],
        "/dev-ecs-stack/dev-ecs-task-role/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devecstaskroleDefaultPolicy3F6F95CC"
          }
        ],
        "/dev-ecs-stack/dev-task-def/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devtaskdef63FEE550"
          }
        ],
        "/dev-ecs-stack/dev-task-def/dev-api-container/LogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devtaskdefdevapicontainerLogGroupA9BD14E2"
          }
        ],
        "/dev-ecs-stack/dev-alb/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devalbA03094B9"
          }
        ],
        "/dev-ecs-stack/dev-alb/dev-http-listener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devalbdevhttplistenerFAAF201D"
          }
        ],
        "/dev-ecs-stack/dev-alb/dev-target-listener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devalbdevtargetlistenerBC6FF62F"
          }
        ],
        "/dev-ecs-stack/dev-target-group/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devtargetgroup1043A318"
          }
        ],
        "/dev-ecs-stack/dev-ecs-service": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/var/folders/hd/tt13mb5d7vz8v6l5msy1xpf80000gn/T/jsii-kernel-5rtThF/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1978)",
              "Annotations.addWarningV2 (/var/folders/hd/tt13mb5d7vz8v6l5msy1xpf80000gn/T/jsii-kernel-5rtThF/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/var/folders/hd/tt13mb5d7vz8v6l5msy1xpf80000gn/T/jsii-kernel-5rtThF/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8444)",
              "new FargateService2 (/var/folders/hd/tt13mb5d7vz8v6l5msy1xpf80000gn/T/jsii-kernel-5rtThF/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3888)",
              "new FargateService2 (/var/folders/hd/tt13mb5d7vz8v6l5msy1xpf80000gn/T/jsii-kernel-5rtThF/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "Kernel._Kernel_create (/private/var/folders/hd/tt13mb5d7vz8v6l5msy1xpf80000gn/T/tmpsy_yjern/lib/program.js:548:25)",
              "Kernel.create (/private/var/folders/hd/tt13mb5d7vz8v6l5msy1xpf80000gn/T/tmpsy_yjern/lib/program.js:218:93)",
              "KernelHost.processRequest (/private/var/folders/hd/tt13mb5d7vz8v6l5msy1xpf80000gn/T/tmpsy_yjern/lib/program.js:15464:36)",
              "KernelHost.run (/private/var/folders/hd/tt13mb5d7vz8v6l5msy1xpf80000gn/T/tmpsy_yjern/lib/program.js:15424:22)",
              "Immediate._onImmediate (/private/var/folders/hd/tt13mb5d7vz8v6l5msy1xpf80000gn/T/tmpsy_yjern/lib/program.js:15425:45)",
              "process.processImmediate (node:internal/timers:505:21)"
            ]
          }
        ],
        "/dev-ecs-stack/dev-ecs-service/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devecsserviceService003F6BA9"
          }
        ],
        "/dev-ecs-stack/dev-cluster-name": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devclustername"
          }
        ],
        "/dev-ecs-stack/dev-service-name": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devservicename"
          }
        ],
        "/dev-ecs-stack/dev-alb-dns": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devalbdns"
          }
        ],
        "/dev-ecs-stack/dev-ecr-repo-uri": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devecrrepouri"
          }
        ],
        "/dev-ecs-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/dev-ecs-stack/Exports/Output{\"Ref\":\"devecsclusterB98E42DE\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefdevecsclusterB98E42DE38DC728D"
          }
        ],
        "/dev-ecs-stack/Exports/Output{\"Fn::GetAtt\":[\"devecsserviceService003F6BA9\",\"Name\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttdevecsserviceService003F6BA9Name18E21F54"
          }
        ],
        "/dev-ecs-stack/Exports/Output{\"Fn::GetAtt\":[\"devalbA03094B9\",\"CanonicalHostedZoneID\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttdevalbA03094B9CanonicalHostedZoneID45F65859"
          }
        ],
        "/dev-ecs-stack/Exports/Output{\"Fn::GetAtt\":[\"devalbA03094B9\",\"DNSName\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttdevalbA03094B9DNSName601887C6"
          }
        ],
        "/dev-ecs-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/dev-ecs-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "dev-ecs-stack"
    },
    "dev-lambda-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "dev-lambda-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "dev-lambda-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://070949690701/ap-south-1",
      "properties": {
        "templateFile": "dev-lambda-stack.template.json",
        "terminationProtection": false,
        "tags": {
          "CostCenter": "development",
          "Environment": "dev",
          "ManagedBy": "cdk",
          "Project": "bluepansy"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-deploy-role-070949690701-ap-south-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-cfn-exec-role-070949690701-ap-south-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-070949690701-ap-south-1/be3114e4f35647f004efa38bdbb6f12844007430ee0f2ef7970c45d1126b6837.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "dev-lambda-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-lookup-role-070949690701-ap-south-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "dev-vpc-stack",
        "dev-ecs-stack",
        "dev-rds-stack",
        "dev-lambda-stack.assets"
      ],
      "metadata": {
        "/dev-lambda-stack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "CostCenter",
                "Value": "development"
              },
              {
                "Key": "Environment",
                "Value": "dev"
              },
              {
                "Key": "ManagedBy",
                "Value": "cdk"
              },
              {
                "Key": "Project",
                "Value": "bluepansy"
              }
            ]
          }
        ],
        "/dev-lambda-stack/dev-auto-start/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devautostartServiceRole9569C0E5"
          }
        ],
        "/dev-lambda-stack/dev-auto-start/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devautostartServiceRoleDefaultPolicy666445D2"
          }
        ],
        "/dev-lambda-stack/dev-auto-start/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devautostart435E1B78"
          }
        ],
        "/dev-lambda-stack/dev-auto-stop/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devautostopServiceRole8F8B76AE"
          }
        ],
        "/dev-lambda-stack/dev-auto-stop/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devautostopServiceRoleDefaultPolicyF5A62D40"
          }
        ],
        "/dev-lambda-stack/dev-auto-stop/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devautostop91707419"
          }
        ],
        "/dev-lambda-stack/dev-auto-stop-rule/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devautostoprule1B51F2AB"
          }
        ],
        "/dev-lambda-stack/dev-auto-stop-rule/AllowEventRuledevlambdastackdevautostopFEE949E6": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devautostopruleAllowEventRuledevlambdastackdevautostopFEE949E6735EE799"
          }
        ],
        "/dev-lambda-stack/dev-auto-start-lambda": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devautostartlambda"
          }
        ],
        "/dev-lambda-stack/dev-auto-stop-lambda": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devautostoplambda"
          }
        ],
        "/dev-lambda-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/dev-lambda-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/dev-lambda-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "dev-lambda-stack"
    },
    "dev-api-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "dev-api-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "dev-api-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://070949690701/ap-south-1",
      "properties": {
        "templateFile": "dev-api-stack.template.json",
        "terminationProtection": false,
        "tags": {
          "CostCenter": "development",
          "Environment": "dev",
          "ManagedBy": "cdk",
          "Project": "bluepansy"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-deploy-role-070949690701-ap-south-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-cfn-exec-role-070949690701-ap-south-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-070949690701-ap-south-1/bdd273fccb69680c71931a9f128d405b11b2e2299a11c1ab948dea734b51cb25.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "dev-api-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::070949690701:role/cdk-hnb659fds-lookup-role-070949690701-ap-south-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "dev-ecs-stack",
        "dev-api-stack.assets"
      ],
      "metadata": {
        "/dev-api-stack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "CostCenter",
                "Value": "development"
              },
              {
                "Key": "Environment",
                "Value": "dev"
              },
              {
                "Key": "ManagedBy",
                "Value": "cdk"
              },
              {
                "Key": "Project",
                "Value": "bluepansy"
              }
            ]
          }
        ],
        "/dev-api-stack/dev-hosted-zone/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devhostedzone9CF06418"
          }
        ],
        "/dev-api-stack/dev-certificate/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devcertificateF0E045E1"
          }
        ],
        "/dev-api-stack/dev-subdomain-record/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devsubdomainrecord5BA9337E"
          }
        ],
        "/dev-api-stack/dev-root-record/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devrootrecordE55CBA0B"
          }
        ],
        "/dev-api-stack/dev-full-domain": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devfulldomain"
          }
        ],
        "/dev-api-stack/dev-certificate-arn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devcertificatearn"
          }
        ],
        "/dev-api-stack/dev-hosted-zone-id": [
          {
            "type": "aws:cdk:logicalId",
            "data": "devhostedzoneid"
          }
        ],
        "/dev-api-stack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/dev-api-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/dev-api-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "dev-api-stack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/core:enableStackNameDuplicates": {
            "recommendedValue": true,
            "explanation": "Allow multiple stacks with the same name",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "aws-cdk:enableDiffNoFail": {
            "recommendedValue": true,
            "explanation": "Make `cdk diff` not fail when there are differences",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecr-assets:dockerIgnoreSupport": {
            "recommendedValue": true,
            "explanation": "DockerImageAsset properly supports `.dockerignore` files by default",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-secretsmanager:parseOwnedSecretName": {
            "recommendedValue": true,
            "explanation": "Fix the referencing of SecretsManager names from ARNs",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-kms:defaultKeyPolicies": {
            "recommendedValue": true,
            "explanation": "Tighten default KMS key policies",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-s3:grantWriteWithoutAcl": {
            "recommendedValue": true,
            "explanation": "Remove `PutObjectAcl` from Bucket.grantWrite",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": {
            "recommendedValue": true,
            "explanation": "Do not specify a default DesiredCount for ECS services",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-efs:defaultEncryptionAtRest": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have elastic file systems encrypted at rest by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs.",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1025.0"
}