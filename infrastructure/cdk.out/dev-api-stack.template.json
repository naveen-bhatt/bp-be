{
 "Description": "Domain, SSL certificate, and DNS configuration for dev environment",
 "Resources": {
  "devhostedzone9CF06418": {
   "Type": "AWS::Route53::HostedZone",
   "Properties": {
    "HostedZoneTags": [
     {
      "Key": "CostCenter",
      "Value": "development"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Project",
      "Value": "bluepansy"
     }
    ],
    "Name": "bluepansy.in."
   },
   "Metadata": {
    "aws:cdk:path": "dev-api-stack/dev-hosted-zone/Resource"
   }
  },
  "devcertificateF0E045E1": {
   "Type": "AWS::CertificateManager::Certificate",
   "Properties": {
    "DomainName": "dev-api.bluepansy.in",
    "DomainValidationOptions": [
     {
      "DomainName": "dev-api.bluepansy.in",
      "HostedZoneId": {
       "Ref": "devhostedzone9CF06418"
      }
     },
     {
      "DomainName": "bluepansy.in",
      "HostedZoneId": {
       "Ref": "devhostedzone9CF06418"
      }
     }
    ],
    "SubjectAlternativeNames": [
     "bluepansy.in"
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "development"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "cdk"
     },
     {
      "Key": "Name",
      "Value": "dev-api-stack/dev-certificate"
     },
     {
      "Key": "Project",
      "Value": "bluepansy"
     }
    ],
    "ValidationMethod": "DNS"
   },
   "Metadata": {
    "aws:cdk:path": "dev-api-stack/dev-certificate/Resource"
   }
  },
  "devsubdomainrecord5BA9337E": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::Join": [
       "",
       [
        "dualstack.",
        {
         "Fn::ImportValue": "dev-ecs-stack:ExportsOutputFnGetAttdevalbA03094B9DNSName601887C6"
        }
       ]
      ]
     },
     "HostedZoneId": {
      "Fn::ImportValue": "dev-ecs-stack:ExportsOutputFnGetAttdevalbA03094B9CanonicalHostedZoneID45F65859"
     }
    },
    "HostedZoneId": {
     "Ref": "devhostedzone9CF06418"
    },
    "Name": "dev-api.bluepansy.in.",
    "Type": "A"
   },
   "Metadata": {
    "aws:cdk:path": "dev-api-stack/dev-subdomain-record/Resource"
   }
  },
  "devrootrecordE55CBA0B": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::Join": [
       "",
       [
        "dualstack.",
        {
         "Fn::ImportValue": "dev-ecs-stack:ExportsOutputFnGetAttdevalbA03094B9DNSName601887C6"
        }
       ]
      ]
     },
     "HostedZoneId": {
      "Fn::ImportValue": "dev-ecs-stack:ExportsOutputFnGetAttdevalbA03094B9CanonicalHostedZoneID45F65859"
     }
    },
    "HostedZoneId": {
     "Ref": "devhostedzone9CF06418"
    },
    "Name": "bluepansy.in.",
    "Type": "A"
   },
   "Metadata": {
    "aws:cdk:path": "dev-api-stack/dev-root-record/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02LQQ7CIBREz9I9fC2NBzDduNO0OzcG4VexFhr4xBjC3S3pwq5m3suMAFHXsK/kJ3ClR/42d0g9STWyRd2Sd5Hw0EA6uUCor84iawe7oWOHynld7Np6pMwUejKDUZJwklY+0ENq/66sN5hzEedIc1y+ly89nd01UAsQ1SsYw320ZCaEbs0fDUfDu7YAAAA="
   },
   "Metadata": {
    "aws:cdk:path": "dev-api-stack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "devfulldomain": {
   "Description": "Full domain for dev environment",
   "Value": "dev-api.bluepansy.in",
   "Export": {
    "Name": "dev-full-domain"
   }
  },
  "devcertificatearn": {
   "Description": "SSL certificate ARN for dev environment",
   "Value": {
    "Ref": "devcertificateF0E045E1"
   },
   "Export": {
    "Name": "dev-certificate-arn"
   }
  },
  "devhostedzoneid": {
   "Description": "Route53 hosted zone ID for dev environment",
   "Value": {
    "Ref": "devhostedzone9CF06418"
   },
   "Export": {
    "Name": "dev-hosted-zone-id"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}