name: Deploy QA Environment

on:
  push:
    branches: [qa]
  pull_request:
    branches: [qa]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        default: "qa"
        type: choice
        options:
          - qa

env:
  AWS_REGION: ap-south-1
  ENVIRONMENT: qa

jobs:
  deploy:
    name: Deploy QA Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Bootstrap CDK (if needed)
        run: |
          cd infrastructure
          cdk bootstrap || echo "CDK already bootstrapped"

      - name: Synthesize CDK
        run: |
          cd infrastructure
          cdk synth
          cdk deploy --all --context environment=qa --require-approval never

      - name: Build and Push Docker Image
        run: |
          # Login to ECR
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

          # Build image
          docker build -t qa-bluepansy-api .

          # Tag for ECR
          docker tag qa-bluepansy-api:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/qa-bluepansy-api:latest

          # Push to ECR
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/qa-bluepansy-api:latest

      - name: Update ECS Service
        run: |
          # Force new deployment to pick up the new image
          aws ecs update-service --cluster qa-bluepansy-cluster --service qa-bluepansy-service --force-new-deployment

      - name: Wait for ECS Service Stability
        run: |
          aws ecs wait services-stable --cluster qa-bluepansy-cluster --services qa-bluepansy-service

      - name: Deployment Summary
        run: |
          echo "üöÄ QA Environment Deployment Complete!"
          echo "üåê API Endpoint: https://qa-api.bluepansy.in"
          echo "üìä ECS Service: qa-bluepansy-service"
          echo "üóÑÔ∏è  RDS Database: qa-database"
